{"version":3,"file":"static/js/583.81bc0936.chunk.js","mappings":"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","sources":["FavoriteList/FavoritList.styles.js","FavoriteList/EmptyFavoriteList.styles.js","FavoriteList/EmptyFavoriteList.jsx","FavoriteList/FavoritList.jsx"],"sourcesContent":["import styled from 'styled-components';\nexport const FavoriteCardContainer = styled.div`\n  border: 1px solid rgba(16, 24, 40, 0.2);\n  border-radius: 20px;\n  padding: 24px;\n  width: 888px;\n  height: 358px;\n  background: #fff;\n  display: flex;\n  gap: 24px;\n  margin: 0 auto;\n  margin-bottom: 32px;\n  font-weight: 600;\n  font-size: 25px;\n`;\nexport const FavoriteCardContainerText = styled.p`\n  font-weight: 600;\n  font-size: 25px;\n`;\n","import styled from 'styled-components';\nexport const EmptyText = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  margin-top: 40px;\n`;\n","import { EmptyText } from './EmptyFavoriteList.styles';\nimport { FavoriteCardContainerText } from './FavoritList.styles';\n\nexport const EmptyFavoriteList = () => {\n  return (\n    <EmptyText>\n      <FavoriteCardContainerText>\n        You don&apos;t have any campers saved yet\n      </FavoriteCardContainerText>\n    </EmptyText>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { removeFavoriteItem } from '../redux/operation';\nimport {\n  ButtonAddToFavorite,\n  CardImg,\n  CardImgContainer,\n  Description,\n  InformationContainer,\n  List,\n  ListText,\n  Name,\n  NameDiv,\n  Prise,\n  Reviews,\n  ReviewsStar,\n  ShowMore,\n  UlList,\n  UseHart,\n} from '../AutoCard/AutoCard.styles';\nimport sprite from '../img/svg.svg';\nimport ShowMoreCard from '../ShowMoreCard/ShowMoreCard';\nimport { FavoriteCardContainer } from './FavoritList.styles';\nimport { EmptyFavoriteList } from './EmptyFavoriteList';\nconst Favorits = () => {\n  const [favorites, setFavorites] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedAuto, setSelectedAuto] = useState(null);\n  const [array, setArray] = useState([]);\n\n  const favArray = useSelector((state) => state.favoriteArray);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setArray(favArray);\n  }, [favArray]);\n\n  useEffect(() => {\n    const savedFavorites = JSON.parse(localStorage.getItem('favorites')) || [];\n\n    setFavorites(savedFavorites);\n    return;\n  }, []);\n\n  const firstLetter = (w) => {\n    if (w) {\n      return w.charAt(0).toUpperCase() + w.slice(1);\n    }\n  };\n\n  const showMore = (auto) => {\n    setSelectedAuto(auto);\n    setIsModalOpen(true);\n  };\n\n  const onClose = () => {\n    return setIsModalOpen(false);\n  };\n\n  const removeToFavirite = (id) => {\n    dispatch(removeFavoriteItem(id));\n    const updatedFavorites = favorites.filter((nummer) => nummer !== id);\n    localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n  };\n\n  return (\n    <>\n      {array.length > 0 ? (\n        array?.map((auto) => (\n          <FavoriteCardContainer key={auto._id}>\n            <CardImgContainer>\n              <CardImg src={auto.gallery?.[0]} alt={auto.name} />\n            </CardImgContainer>\n            <InformationContainer>\n              <NameDiv>\n                <Name>{auto.name}</Name>\n                <Prise>\n                  <p>â‚¬{auto.price}.00</p>\n                  <ButtonAddToFavorite\n                    onClick={() => removeToFavirite(auto._id)}\n                  >\n                    <svg width=\"24\" height=\"24\">\n                      <UseHart href={`${sprite}#hearts`}></UseHart>\n                    </svg>\n                  </ButtonAddToFavorite>\n                </Prise>\n              </NameDiv>\n              <Reviews>\n                <ReviewsStar>\n                  <svg width=\"20\" height=\"14\">\n                    <use href={`${sprite}#Rating`}></use>\n                  </svg>\n                  {auto.rating}({auto.reviews?.length} Reviews)\n                </ReviewsStar>\n                <p>\n                  <svg width=\"20\" height=\"14\">\n                    <use href={`${sprite}#map`}></use>\n                  </svg>\n                  {auto.location}\n                </p>\n              </Reviews>\n              <Description>{auto.description}</Description>\n              <UlList>\n                <List>\n                  <svg width=\"20\" height=\"20\">\n                    <use href={`${sprite}#Users`}></use>\n                  </svg>\n                  <ListText>{auto.adults} adults</ListText>\n                </List>\n                <List>\n                  <svg width=\"20\" height=\"20\">\n                    <use href={`${sprite}#nets`}></use>\n                  </svg>\n                  <ListText>{firstLetter(auto.transmission)}</ListText>\n                </List>\n                <List>\n                  <svg width=\"20\" height=\"20\">\n                    <use href={`${sprite}#tank`}></use>\n                  </svg>\n                  <ListText>{firstLetter(auto.engine)}</ListText>\n                </List>\n                <List>\n                  <svg width=\"20\" height=\"20\">\n                    <use href={`${sprite}#Kitchen`}></use>\n                  </svg>\n                  <p>Kitchen</p>\n                </List>\n                <List>\n                  <svg width=\"20\" height=\"20\">\n                    <use\n                      href={`${sprite}#bad`}\n                      width=\"20\"\n                      height=\"20\"\n                      fill=\"none\"\n                    ></use>\n                  </svg>\n                  <ListText>{auto.details?.beds} beds</ListText>\n                </List>\n                <List>\n                  <svg width=\"20\" height=\"20\">\n                    <use href={`${sprite}#blow`} width=\"20\" height=\"20\"></use>\n                  </svg>\n                  <ListText>AC</ListText>\n                </List>\n              </UlList>\n              <ShowMore onClick={() => showMore(auto)}>Show more</ShowMore>\n            </InformationContainer>\n          </FavoriteCardContainer>\n        ))\n      ) : (\n        <EmptyFavoriteList />\n      )}\n      {isModalOpen && <ShowMoreCard onClose={onClose} auto={selectedAuto} />}\n    </>\n  );\n};\nexport default Favorits;\n"],"names":["FavoriteCardContainer","styled","_templateObject","_taggedTemplateLiteral","FavoriteCardContainerText","_templateObject2","EmptyText","EmptyFavoriteList","_jsx","children","_useState","useState","_useState2","_slicedToArray","favorites","setFavorites","_useState3","_useState4","isModalOpen","setIsModalOpen","_useState5","_useState6","selectedAuto","setSelectedAuto","_useState7","_useState8","array","setArray","favArray","useSelector","state","favoriteArray","dispatch","useDispatch","useEffect","savedFavorites","JSON","parse","localStorage","getItem","firstLetter","w","charAt","toUpperCase","slice","_jsxs","_Fragment","length","map","auto","_auto$gallery","_auto$reviews","_auto$details","CardImgContainer","CardImg","src","gallery","alt","name","InformationContainer","NameDiv","Name","Prise","price","ButtonAddToFavorite","onClick","id","removeFavoriteItem","updatedFavorites","filter","nummer","setItem","stringify","removeToFavirite","_id","width","height","UseHart","href","concat","sprite","Reviews","ReviewsStar","rating","reviews","location","Description","description","UlList","List","ListText","adults","transmission","engine","fill","details","beds","ShowMore","showMore","ShowMoreCard","onClose"],"sourceRoot":""}