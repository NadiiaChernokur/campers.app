{"version":3,"file":"static/js/746.bf97b977.chunk.js","mappings":"mRAwBaA,EAAW,WAAO,IAADC,EACtBC,GAAWC,EAAAA,EAAAA,MAEjBC,GAAsCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAClCI,GAAwCL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAAkCT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAvCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GACxBG,GAAeC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMF,YAAY,IACxDG,GAAiBF,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,cAAc,IAElEC,QAAQC,IAAIF,IAMZG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkBC,KAAKC,MAAMC,aAAaC,QAAQ,eAAiB,GAEzEZ,EAAaQ,EACf,GAAG,IAEH,IAcMK,EAAc,SAACC,GACnB,GAAIA,EACF,OAAOA,EAAEC,OAAO,GAAGC,cAAgBF,EAAEG,MAAM,EAE/C,EAKA,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CAC6D,QAD7DpC,EACIoB,EAAeiB,OAAS,EAAIjB,EAAiBH,SAAY,IAAAjB,OAAA,EAA1DA,EAA6DsC,KAC5D,SAACC,GAAI,IAAAC,EAAAC,EAAAC,EAJSC,EAIT,OACHT,EAAAA,EAAAA,MAACU,EAAAA,GAAa,CAAAR,SAAA,EACZS,EAAAA,EAAAA,KAACC,EAAAA,GAAgB,CAAAV,UACfS,EAAAA,EAAAA,KAACE,EAAAA,GAAO,CAACC,IAAiB,QAAdR,EAAED,EAAKU,eAAO,IAAAT,OAAA,EAAZA,EAAe,GAAIU,IAAKX,EAAKY,UAE7CjB,EAAAA,EAAAA,MAACkB,EAAAA,GAAoB,CAAAhB,SAAA,EACnBF,EAAAA,EAAAA,MAACmB,EAAAA,GAAO,CAAAjB,SAAA,EACNS,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAAAlB,SAAEG,EAAKY,QACZjB,EAAAA,EAAAA,MAACqB,EAAAA,GAAK,CAAAnB,SAAA,EACJF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,SAAEG,EAAKiB,MAAM,UAChBX,EAAAA,EAAAA,KAACY,EAAAA,GAAmB,CAACC,QAAS,kBApCxB,SAACf,GACrB,IAAMgB,GAAgBC,EAAAA,EAAAA,GAAO7C,GACvB8C,EAAQF,EAAiBG,QAAQnB,IACxB,IAAXkB,GACFF,EAAiBI,OAAOF,EAAO,GAC/B5D,GAAS+D,EAAAA,EAAAA,IAAmBrB,MAE5BgB,EAAiBM,KAAKtB,GACtB1C,GAASiE,EAAAA,EAAAA,IAAYvB,KAEvB3B,EAAa2C,GACbhC,aAAawC,QAAQ,YAAa1C,KAAK2C,UAAUT,GACnD,CAwBoDU,CAAc9B,EAAK+B,IAAI,EAAClC,UAdxDO,EAeUJ,EAAK+B,IAfRvD,EAAUwD,SAAS5B,IAgB1BE,EAAAA,EAAAA,KAAA,OAAK2B,MAAM,KAAKC,OAAO,KAAIrC,UACzBS,EAAAA,EAAAA,KAAC6B,EAAAA,GAAO,CAACC,KAAI,GAAAC,OAAKC,EAAAA,EAAM,gBAG1BhC,EAAAA,EAAAA,KAAA,OAAK2B,MAAM,KAAKC,OAAO,KAAIrC,UACzBS,EAAAA,EAAAA,KAAC6B,EAAAA,GAAO,CAACC,KAAI,GAAAC,OAAKC,EAAAA,EAAM,wBAMlC3C,EAAAA,EAAAA,MAAC4C,EAAAA,GAAO,CAAA1C,SAAA,EACNF,EAAAA,EAAAA,MAAC6C,EAAAA,GAAW,CAAA3C,SAAA,EACVS,EAAAA,EAAAA,KAAA,OAAK2B,MAAM,KAAKC,OAAO,KAAIrC,UACzBS,EAAAA,EAAAA,KAAA,OAAK8B,KAAI,GAAAC,OAAKC,EAAAA,EAAM,eAErBtC,EAAKyC,OAAO,IAAc,QAAbvC,EAACF,EAAK0C,eAAO,IAAAxC,OAAA,EAAZA,EAAcJ,OAAO,gBAEtCH,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EACES,EAAAA,EAAAA,KAAA,OAAK2B,MAAM,KAAKC,OAAO,KAAIrC,UACzBS,EAAAA,EAAAA,KAAA,OAAK8B,KAAI,GAAAC,OAAKC,EAAAA,EAAM,YAErBtC,EAAK2C,gBAGVrC,EAAAA,EAAAA,KAACsC,EAAAA,GAAW,CAAA/C,SAAEG,EAAK6C,eACnBlD,EAAAA,EAAAA,MAACmD,EAAAA,GAAM,CAAAjD,SAAA,EACLF,EAAAA,EAAAA,MAACoD,EAAAA,GAAI,CAAAlD,SAAA,EACHS,EAAAA,EAAAA,KAAA,OAAK2B,MAAM,KAAKC,OAAO,KAAIrC,UACzBS,EAAAA,EAAAA,KAAA,OAAK8B,KAAI,GAAAC,OAAKC,EAAAA,EAAM,eAEtB3C,EAAAA,EAAAA,MAACqD,EAAAA,GAAQ,CAAAnD,SAAA,CAAEG,EAAKiD,OAAO,iBAEzBtD,EAAAA,EAAAA,MAACoD,EAAAA,GAAI,CAAAlD,SAAA,EACHS,EAAAA,EAAAA,KAAA,OAAK2B,MAAM,KAAKC,OAAO,KAAIrC,UACzBS,EAAAA,EAAAA,KAAA,OAAK8B,KAAI,GAAAC,OAAKC,EAAAA,EAAM,cAEtBhC,EAAAA,EAAAA,KAAC0C,EAAAA,GAAQ,CAAAnD,SAAEP,EAAYU,EAAKkD,oBAE9BvD,EAAAA,EAAAA,MAACoD,EAAAA,GAAI,CAAAlD,SAAA,EACHS,EAAAA,EAAAA,KAAA,OAAK2B,MAAM,KAAKC,OAAO,KAAIrC,UACzBS,EAAAA,EAAAA,KAAA,OAAK8B,KAAI,GAAAC,OAAKC,EAAAA,EAAM,cAEtBhC,EAAAA,EAAAA,KAAC0C,EAAAA,GAAQ,CAAAnD,SAAEP,EAAYU,EAAKmD,cAE9BxD,EAAAA,EAAAA,MAACoD,EAAAA,GAAI,CAAAlD,SAAA,EACHS,EAAAA,EAAAA,KAAA,OAAK2B,MAAM,KAAKC,OAAO,KAAIrC,UACzBS,EAAAA,EAAAA,KAAA,OAAK8B,KAAI,GAAAC,OAAKC,EAAAA,EAAM,iBAEtBhC,EAAAA,EAAAA,KAAA,KAAAT,SAAG,gBAELF,EAAAA,EAAAA,MAACoD,EAAAA,GAAI,CAAAlD,SAAA,EACHS,EAAAA,EAAAA,KAAA,OAAK2B,MAAM,KAAKC,OAAO,KAAIrC,UACzBS,EAAAA,EAAAA,KAAA,OACE8B,KAAI,GAAAC,OAAKC,EAAAA,EAAM,QACfL,MAAM,KACNC,OAAO,KACPkB,KAAK,YAGTzD,EAAAA,EAAAA,MAACqD,EAAAA,GAAQ,CAAAnD,SAAA,CAAc,QAAdM,EAAEH,EAAKqD,eAAO,IAAAlD,OAAA,EAAZA,EAAcmD,KAAK,eAEhC3D,EAAAA,EAAAA,MAACoD,EAAAA,GAAI,CAAAlD,SAAA,EACHS,EAAAA,EAAAA,KAAA,OAAK2B,MAAM,KAAKC,OAAO,KAAIrC,UACzBS,EAAAA,EAAAA,KAAA,OAAK8B,KAAI,GAAAC,OAAKC,EAAAA,EAAM,SAASL,MAAM,KAAKC,OAAO,UAEjD5B,EAAAA,EAAAA,KAAC0C,EAAAA,GAAQ,CAAAnD,SAAC,cAGdS,EAAAA,EAAAA,KAACiD,EAAAA,GAAQ,CAACpC,QAAS,kBAtHd,SAACnB,GAChB3B,EAAgB2B,GAChB/B,GAAe,EACjB,CAmHqCuF,CAASxD,EAAK,EAACH,SAAC,mBAhFzBG,EAAK+B,IAkFT,IAGnB/D,IAAesC,EAAAA,EAAAA,KAACmD,EAAAA,EAAY,CAACC,QA7FlB,WACd,OAAOzF,GAAe,EACxB,EA2FoD+B,KAAM5B,MAG5D,E,6BC/JauF,EAAgBC,EAAAA,GAAAA,MAAYC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6GAM5BC,EAAgBH,EAAAA,GAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,oTAWrCH,GAKSM,EAAgBL,EAAAA,GAAAA,KAAWM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,2BAG3BK,EAAYP,EAAAA,GAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,+KAStBO,EAAcT,EAAAA,GAAAA,IAAUU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,oEAKxBS,EAAgBX,EAAAA,GAAAA,MAAYY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,wKAU5BW,EAAUb,EAAAA,GAAAA,EAAQc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,kCAGlBa,EAAmBf,EAAAA,GAAAA,EAAQgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,8FAM3Be,EAAOjB,EAAAA,GAAAA,EAAQkB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,kCAGfiB,EAAenB,EAAAA,GAAAA,OAAaoB,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,qJC7C5BmB,GDsDMrB,EAAAA,GAAAA,IAAUsB,IAAAA,GAAApB,EAAAA,EAAAA,GAAA,0BCtDP,WACpB,IAAMpG,GAAWC,EAAAA,EAAAA,MAEjBC,GAAgCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCuH,EAAQrH,EAAA,GAAEsH,EAAWtH,EAAA,GAC5BI,GAAgCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCyE,EAAQxE,EAAA,GAAEkH,EAAWlH,EAAA,GACtBmH,GAAa3G,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAM2G,YAAY,IAC1DjH,GAAwCT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA7CkH,EAAYjH,EAAA,GAAEkH,EAAelH,EAAA,GACpCmH,GAA8B7H,EAAAA,EAAAA,UAAS,CACrC8H,WAAW,EACXC,kBAAkB,EAClBC,gBAAgB,EAChBC,WAAW,EACXC,eAAe,IACfC,GAAAjI,EAAAA,EAAAA,GAAA2H,EAAA,GANKO,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GA+E1B,OAJAhH,EAAAA,EAAAA,YAAU,WACRF,QAAQC,IAAIyG,GACZ9H,GAASmB,EAAAA,EAAAA,IAAe2G,GAC1B,GAAG,CAAC9H,EAAU8H,KAEZlF,EAAAA,EAAAA,KAAAV,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,MAACsE,EAAa,CAAApE,SAAA,EACZF,EAAAA,EAAAA,MAAC0E,EAAW,CAAAxE,SAAA,EACVS,EAAAA,EAAAA,KAAA,SAAAT,SAAO,cACPS,EAAAA,EAAAA,KAACiE,EAAa,CACZ4B,KAAK,OACL/F,GAAG,gBACHgG,YAAY,gBACZC,MAAO1D,EACP2D,SAhEwB,SAAAC,GAChClB,EAAYkB,EAAEC,OAAOH,MACvB,QAiEM/F,EAAAA,EAAAA,KAACmE,EAAO,CAAA5E,SAAC,aACTS,EAAAA,EAAAA,KAACqE,EAAgB,CAAA9E,SAAC,uBAClBF,EAAAA,EAAAA,MAACwE,EAAS,CAAAtE,SAAA,EACRF,EAAAA,EAAAA,MAACoE,EAAa,CACZ0C,QAAQ,KACRC,MAAOT,EAAQN,UAAY,CAAEgB,OAAQ,iBAAoB,CAAC,EAAE9G,SAAA,EAE5DS,EAAAA,EAAAA,KAACqD,EAAa,CACZwC,KAAK,WACL/F,GAAG,KACHwG,QAASX,EAAQN,UACjBW,SAAU,SAAAC,GAAC,OAhGAK,EAgGmBL,EAAEC,OAAOI,aA/FjDV,GAAUW,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIZ,GAAO,IAAEN,UAAWiB,KADf,IAAAA,CAgGoC,KAGjDtG,EAAAA,EAAAA,KAAA,OAAK2B,MAAM,KAAKC,OAAO,KAAIrC,UACzBS,EAAAA,EAAAA,KAAA,OAAKwG,UAAS,GAAAzE,OAAKC,EAAAA,EAAM,SAASL,MAAM,KAAKC,OAAO,UAGtD5B,EAAAA,EAAAA,KAAA,KAAAT,SAAG,WAELF,EAAAA,EAAAA,MAACoE,EAAa,CACZ0C,QAAQ,YACRC,MAAOT,EAAQL,iBAAmB,CAAEe,OAAQ,iBAAoB,CAAC,EAAE9G,SAAA,EAEnES,EAAAA,EAAAA,KAACqD,EAAa,CACZwC,KAAK,WACL/F,GAAG,YACHwG,QAASX,EAAQL,iBACjBU,SAAU,SAAAC,GAAC,OA7GOK,EA6GmBL,EAAEC,OAAOI,aA5GxDV,GAAUW,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIZ,GAAO,IAAEL,iBAAkBgB,KADf,IAAAA,CA6GoC,KAExDtG,EAAAA,EAAAA,KAAA,OAAK2B,MAAM,KAAKC,OAAO,KAAIrC,UACzBS,EAAAA,EAAAA,KAAA,OAAK8B,KAAI,GAAAC,OAAKC,EAAAA,EAAM,cAEtBhC,EAAAA,EAAAA,KAAA,KAAAT,SAAG,kBAELF,EAAAA,EAAAA,MAACoE,EAAa,CACZ0C,QAAQ,UACRC,MAAOT,EAAQJ,eAAiB,CAAEc,OAAQ,iBAAoB,CAAC,EAAE9G,SAAA,EAEjES,EAAAA,EAAAA,KAACqD,EAAa,CACZwC,KAAK,WACL/F,GAAG,UACHwG,QAASX,EAAQJ,eACjBS,SAAU,SAAAC,GAAC,OAzHMK,EAyHmBL,EAAEC,OAAOI,aAxHvDV,GAAUW,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIZ,GAAO,IAAEJ,eAAgBe,KADd,IAAAA,CAyHoC,KAEvDtG,EAAAA,EAAAA,KAAA,OAAK2B,MAAM,KAAKC,OAAO,KAAIrC,UACzBS,EAAAA,EAAAA,KAAA,OAAK8B,KAAI,GAAAC,OAAKC,EAAAA,EAAM,iBAEtBhC,EAAAA,EAAAA,KAAA,KAAAT,SAAG,gBAELF,EAAAA,EAAAA,MAACoE,EAAa,CACZ0C,QAAQ,KACRC,MAAOT,EAAQH,UAAY,CAAEa,OAAQ,iBAAoB,CAAC,EAAE9G,SAAA,EAE5DS,EAAAA,EAAAA,KAACqD,EAAa,CACZwC,KAAK,WACL/F,GAAG,KACHwG,QAASX,EAAQH,UACjBQ,SAAU,SAAAC,GAAC,OApICK,EAoImBL,EAAEC,OAAOI,aAnIlDV,GAAUW,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIZ,GAAO,IAAEH,UAAWc,KADd,IAAAA,CAoIoC,KAElDtG,EAAAA,EAAAA,KAAA,OAAK2B,MAAM,KAAKC,OAAO,KAAIrC,UACzBS,EAAAA,EAAAA,KAAA,OAAK8B,KAAI,GAAAC,OAAKC,EAAAA,EAAM,aAEtBhC,EAAAA,EAAAA,KAAA,KAAAT,SAAG,WAELF,EAAAA,EAAAA,MAACoE,EAAa,CACZ0C,QAAQ,YACRC,MAAOT,EAAQF,cAAgB,CAAEY,OAAQ,iBAAoB,CAAC,EAAE9G,SAAA,EAEhES,EAAAA,EAAAA,KAACqD,EAAa,CACZwC,KAAK,WACL/F,GAAG,YACHwG,QAASX,EAAQF,cACjBO,SAAU,SAAAC,GAAC,OA/IKK,EA+ImBL,EAAEC,OAAOI,aA9ItDV,GAAUW,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIZ,GAAO,IAAEF,cAAea,KADd,IAAAA,CA+IoC,KAEtDtG,EAAAA,EAAAA,KAAA,OAAK2B,MAAM,KAAKC,OAAO,KAAIrC,UACzBS,EAAAA,EAAAA,KAAA,OAAK8B,KAAI,GAAAC,OAAKC,EAAAA,EAAM,eAEtBhC,EAAAA,EAAAA,KAAA,KAAAT,SAAG,qBAGPS,EAAAA,EAAAA,KAACuE,EAAI,CAAAhF,SAAC,kBACNF,EAAAA,EAAAA,MAACwE,EAAS,CAAAtE,SAAA,EACRF,EAAAA,EAAAA,MAACoE,EAAa,CACZ0C,QAAQ,aACRC,MAAoB,eAAbvB,EAA4B,CAAEwB,OAAQ,iBAAoB,CAAC,EAAE9G,SAAA,EAEpES,EAAAA,EAAAA,KAACqD,EAAa,CACZwC,KAAK,QACLvF,KAAK,WACLR,GAAG,aACHwG,QAAsB,eAAbzB,EACTmB,SAAU,kBAAMlB,EAAY,aAAa,KAE3C9E,EAAAA,EAAAA,KAAA,OAAK2B,MAAM,KAAKC,OAAO,KAAIrC,UACzBS,EAAAA,EAAAA,KAAA,OAAK8B,KAAI,GAAAC,OAAKC,EAAAA,EAAM,cAEtBhC,EAAAA,EAAAA,KAAA,KAAAT,SAAG,YAELF,EAAAA,EAAAA,MAACoE,EAAa,CACZ0C,QAAQ,kBACRC,MACe,oBAAbvB,EAAiC,CAAEwB,OAAQ,iBAAoB,CAAC,EACjE9G,SAAA,EAEDS,EAAAA,EAAAA,KAACqD,EAAa,CACZwC,KAAK,QACLvF,KAAK,WACLR,GAAG,kBACHwG,QAAsB,oBAAbzB,EACTmB,SAAU,kBAAMlB,EAAY,kBAAkB,KAEhD9E,EAAAA,EAAAA,KAAA,OAAK2B,MAAM,KAAKC,OAAO,KAAIrC,UACzBS,EAAAA,EAAAA,KAAA,OAAK8B,KAAI,GAAAC,OAAKC,EAAAA,EAAM,kBAEtBhC,EAAAA,EAAAA,KAAA,KAAAT,SAAG,yBAELF,EAAAA,EAAAA,MAACoE,EAAa,CACZ0C,QAAQ,SACRC,MAAoB,WAAbvB,EAAwB,CAAEwB,OAAQ,iBAAoB,CAAC,EAAE9G,SAAA,EAEhES,EAAAA,EAAAA,KAACqD,EAAa,CACZwC,KAAK,QACLvF,KAAK,WACLR,GAAG,SACHwG,QAAsB,WAAbzB,EACTmB,SAAU,kBAAMlB,EAAY,SAAS,KAEvC9E,EAAAA,EAAAA,KAAA,OAAK2B,MAAM,KAAKC,OAAO,KAAIrC,UACzBS,EAAAA,EAAAA,KAAA,OAAK8B,KAAI,GAAAC,OAAKC,EAAAA,EAAM,kBAEtBhC,EAAAA,EAAAA,KAAA,KAAAT,SAAG,kBAGPS,EAAAA,EAAAA,KAACyE,EAAY,CAACoB,KAAK,SAAShF,QArMb,SAAAoF,GACnBzH,QAAQC,IAAIoG,GAEZoB,EAAEQ,iBACF,IAAIC,EAAS,GACTC,EAAS,GACTC,EAAS,GACTC,EAAS,GACTC,EAAS,GACTC,EAAS,GAkBb,GAhBIpB,EAAQN,YACVqB,EAAS1B,EAAWgC,QAAO,SAAAtH,GAAI,OAAIA,EAAKqD,QAAQkE,eAAiB,CAAC,KAEhEtB,EAAQL,mBACVqB,EAAS3B,EAAWgC,QAAO,SAAAtH,GAAI,MAA0B,cAAtBA,EAAKkD,YAA4B,KAGlE+C,EAAQJ,iBACVqB,EAAS5B,EAAWgC,QAAO,SAAAtH,GAAI,OAAIA,EAAKqD,QAAQmE,QAAU,CAAC,KAEzDvB,EAAQH,YACVqB,EAAS7B,EAAWgC,QAAO,SAAAtH,GAAI,OAAIA,EAAKqD,QAAQoE,GAAK,CAAC,KAEpDxB,EAAQF,gBACVqB,EAAS9B,EAAWgC,QAAO,SAAAtH,GAAI,OAAIA,EAAKqD,QAAQqE,SAAW,CAAC,KAE1D/E,EAAS7C,OAAS,EAAG,CACvB,IAAM6H,EAAQ,IAAIC,OAAOjF,EAAU,KACnC0E,EAAS/B,EAAWgC,QAAO,SAAAtH,GAAI,OAAIA,EAAK2C,SAASkF,MAAMF,EAAM,IAC7D7I,QAAQC,IAAIsI,EACd,CAEA,IAAMS,EAA2B,OAAVxC,QAAU,IAAVA,OAAU,EAAVA,EAAYgC,QACjC,SAAAS,GAAI,QACAf,EAAOlH,QAAUkH,EAAOgB,MAAK,SAAAC,GAAO,OAAIA,EAAQlG,MAAQgG,EAAKhG,GAAG,QAChEkF,EAAOnH,QAAUmH,EAAOe,MAAK,SAAAC,GAAO,OAAIA,EAAQlG,MAAQgG,EAAKhG,GAAG,QAChEmF,EAAOpH,QAAUoH,EAAOc,MAAK,SAAAC,GAAO,OAAIA,EAAQlG,MAAQgG,EAAKhG,GAAG,QAChEoF,EAAOrH,QAAUqH,EAAOa,MAAK,SAAAC,GAAO,OAAIA,EAAQlG,MAAQgG,EAAKhG,GAAG,QAChEqF,EAAOtH,QAAUsH,EAAOY,MAAK,SAAAC,GAAO,OAAIA,EAAQlG,MAAQgG,EAAKhG,GAAG,QAChEsF,EAAOvH,QAAUuH,EAAOW,MAAK,SAAAC,GAAO,OAAIA,EAAQlG,MAAQgG,EAAKhG,GAAG,IAAE,IAExEjD,QAAQC,IAAI+I,GACZrC,EAAgBqC,EAClB,EAyJwDjI,SAAC,eAM3D,GC/PaqI,EAAgBtE,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sEAK1BqE,EAAUvE,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,+EAKpBsE,EAAgBxE,EAAAA,GAAAA,OAAaM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,yIC8C1C,EAlDoB,WAClB,IAAMpG,GAAWC,EAAAA,EAAAA,MACjBC,GAAwBC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5ByK,EAAIvK,EAAA,GAAEwK,EAAOxK,EAAA,GACpBI,GAA8BL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAtCqK,EAAOpK,EAAA,GAAEqK,EAAUrK,EAAA,GAC1BG,GAA0CT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAlDmK,EAAalK,EAAA,GAAEmK,EAAgBnK,EAAA,GAChC+G,GAAa3G,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAM2G,YAAY,IACpDoD,GAAehK,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,YAAY,IAEtDkK,EAAW,WACXD,EAAa7I,OAAS,GAAKwF,EAAWxF,QACxC4I,GAAiB,GAEnBJ,GAAQ,SAAAO,GAAI,OAAIA,EAAO,CAAC,IACxBnL,GAASoL,EAAAA,EAAAA,IAAWT,GACtB,EAkBA,OAhBArJ,EAAAA,EAAAA,YAAU,WACR,IAAKuJ,EAGH,OAFA7K,GAASqL,EAAAA,EAAAA,YACTP,GAAW,GAGTH,EAAO,IAIXC,GAAQ,SAAAO,GAAI,OAAIA,EAAO,CAAC,IACxBnL,GAASoL,EAAAA,EAAAA,IAAWT,IACpB3K,GAAS6H,EAAAA,EAAAA,OAEX,GAAG,CAAC7H,EAAU6K,EAASF,KAGrB/H,EAAAA,EAAAA,KAAAV,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,MAACuI,EAAa,CAAArI,SAAA,EACZS,EAAAA,EAAAA,KAAC2E,EAAM,KACPtF,EAAAA,EAAAA,MAACwI,EAAO,CAAAtI,SAAA,EACNS,EAAAA,EAAAA,KAAC9C,EAAQ,CAAC6K,KAAMA,IACfI,GACCnI,EAAAA,EAAAA,KAAC8H,EAAa,CAACjH,QAASyH,EAAUlC,MAAO,CAAEsC,QAAS,QAASnJ,SAAC,eAI9DS,EAAAA,EAAAA,KAAC8H,EAAa,CAACjH,QAASyH,EAAS/I,SAAC,qBAM9C,C","sources":["AutoCard/AutoCard.jsx","Filter/Filter.styles.js","Filter/Filter.jsx","CampersPage/CampersPage.styles.js","CampersPage/CampersPage.jsx"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport {\n  ButtonAddToFavorite,\n  CardContainer,\n  CardImg,\n  CardImgContainer,\n  Description,\n  InformationContainer,\n  List,\n  ListText,\n  Name,\n  NameDiv,\n  Prise,\n  Reviews,\n  ReviewsStar,\n  ShowMore,\n  UlList,\n  UseHart,\n} from './AutoCard.styles';\nimport { addFavorite, removeFavoriteItem } from '../redux/operation';\nimport { useEffect, useState } from 'react';\nimport sprite from '../img/svg.svg';\nimport ShowMoreCard from '../ShowMoreCard/ShowMoreCard';\n\nexport const AutoCard = () => {\n  const dispatch = useDispatch();\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedAuto, setSelectedAuto] = useState(null);\n  const [favorites, setFavorites] = useState([]);\n  const campersArray = useSelector((state) => state.campersArray);\n  const newFilterArray = useSelector((state) => state.newFilterArray);\n\n  console.log(newFilterArray);\n  const showMore = (auto) => {\n    setSelectedAuto(auto);\n    setIsModalOpen(true);\n  };\n\n  useEffect(() => {\n    const storedFavorites = JSON.parse(localStorage.getItem('favorites')) || [];\n\n    setFavorites(storedFavorites);\n  }, []);\n\n  const addToFavirite = (id) => {\n    const updatedFavorites = [...favorites];\n    const index = updatedFavorites.indexOf(id);\n    if (index !== -1) {\n      updatedFavorites.splice(index, 1);\n      dispatch(removeFavoriteItem(id));\n    } else {\n      updatedFavorites.push(id);\n      dispatch(addFavorite(id));\n    }\n    setFavorites(updatedFavorites);\n    localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n  };\n\n  const firstLetter = (w) => {\n    if (w) {\n      return w.charAt(0).toUpperCase() + w.slice(1);\n    }\n  };\n  const onClose = () => {\n    return setIsModalOpen(false);\n  };\n  const isFavorite = (id) => favorites.includes(id);\n  return (\n    <>\n      {(newFilterArray.length > 0 ? newFilterArray : campersArray)?.map(\n        (auto) => (\n          <CardContainer key={auto._id}>\n            <CardImgContainer>\n              <CardImg src={auto.gallery?.[0]} alt={auto.name} />\n            </CardImgContainer>\n            <InformationContainer>\n              <NameDiv>\n                <Name>{auto.name}</Name>\n                <Prise>\n                  <p>€{auto.price},00</p>\n                  <ButtonAddToFavorite onClick={() => addToFavirite(auto._id)}>\n                    {isFavorite(auto._id) ? (\n                      <svg width=\"24\" height=\"24\">\n                        <UseHart href={`${sprite}#hearts`}></UseHart>\n                      </svg>\n                    ) : (\n                      <svg width=\"24\" height=\"24\">\n                        <UseHart href={`${sprite}#heart`}></UseHart>\n                      </svg>\n                    )}\n                  </ButtonAddToFavorite>\n                </Prise>\n              </NameDiv>\n              <Reviews>\n                <ReviewsStar>\n                  <svg width=\"20\" height=\"14\">\n                    <use href={`${sprite}#Rating`}></use>\n                  </svg>\n                  {auto.rating}({auto.reviews?.length} Reviews)\n                </ReviewsStar>\n                <p>\n                  <svg width=\"20\" height=\"14\">\n                    <use href={`${sprite}#map`}></use>\n                  </svg>\n                  {auto.location}\n                </p>\n              </Reviews>\n              <Description>{auto.description}</Description>\n              <UlList>\n                <List>\n                  <svg width=\"20\" height=\"20\">\n                    <use href={`${sprite}#Users`}></use>\n                  </svg>\n                  <ListText>{auto.adults} adults</ListText>\n                </List>\n                <List>\n                  <svg width=\"20\" height=\"20\">\n                    <use href={`${sprite}#nets`}></use>\n                  </svg>\n                  <ListText>{firstLetter(auto.transmission)}</ListText>\n                </List>\n                <List>\n                  <svg width=\"20\" height=\"20\">\n                    <use href={`${sprite}#tank`}></use>\n                  </svg>\n                  <ListText>{firstLetter(auto.engine)}</ListText>\n                </List>\n                <List>\n                  <svg width=\"20\" height=\"20\">\n                    <use href={`${sprite}#Kitchen`}></use>\n                  </svg>\n                  <p>Kitchen</p>\n                </List>\n                <List>\n                  <svg width=\"20\" height=\"20\">\n                    <use\n                      href={`${sprite}#bad`}\n                      width=\"20\"\n                      height=\"20\"\n                      fill=\"none\"\n                    ></use>\n                  </svg>\n                  <ListText>{auto.details?.beds} beds</ListText>\n                </List>\n                <List>\n                  <svg width=\"20\" height=\"20\">\n                    <use href={`${sprite}#blow`} width=\"20\" height=\"20\"></use>\n                  </svg>\n                  <ListText>AC</ListText>\n                </List>\n              </UlList>\n              <ShowMore onClick={() => showMore(auto)}>Show more</ShowMore>\n            </InformationContainer>\n          </CardContainer>\n        )\n      )}\n      {isModalOpen && <ShowMoreCard onClose={onClose} auto={selectedAuto} />}\n    </>\n  );\n};\n","import styled from 'styled-components';\nexport const CheckboxInput = styled.input`\n  position: absolute;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n`;\nexport const CheckboxLabel = styled.label`\n  cursor: pointer;\n  position: relative;\n  display: block;\n  border: 1px solid rgba(16, 24, 40, 0.2);\n  border-radius: 10px;\n  padding: 17px 12px;\n  width: 113px;\n  height: 95px;\n  text-align: center;\n\n  ${CheckboxInput}:checked + & {\n    background-color: green;\n    mix-blend-mode: multiply;\n  }\n`;\nexport const FormContainer = styled.form`\n  width: 360px;\n`;\nexport const Equipment = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  border-top: 1px solid rgba(16, 24, 40, 0.2);\n  padding-top: 24px;\n  margin-bottom: 32px;\n  color: #101828;\n`;\nexport const LocationDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\nexport const LocationInput = styled.input`\n  border-radius: 10px;\n  padding: 18px 218px 18px 18px;\n  width: 100%;\n  height: 56px;\n  background: #f7f7f7;\n\n  border: none;\n  margin-bottom: 32px;\n`;\nexport const Filters = styled.p`\n  margin-bottom: 14px;\n`;\nexport const VehicleEquipment = styled.p`\n  font-weight: 600;\n  font-size: 20px;\n  color: #101828;\n  margin-bottom: 24px;\n`;\nexport const Type = styled.p`\n  margin-bottom: 24px;\n`;\nexport const SearchButton = styled.button`\n  border-radius: 200px;\n  border: none;\n  padding: 16px 60px;\n  width: 173px;\n  height: 56px;\n  background: #e44848;\n  color: #fff;\n`;\nexport const Svg = styled.svg`\n  width: 15px;\n`;\n","import {\n  CheckboxInput,\n  CheckboxLabel,\n  Equipment,\n  Filters,\n  FormContainer,\n  LocationDiv,\n  LocationInput,\n  SearchButton,\n  Type,\n  VehicleEquipment,\n} from './Filter.styles';\n\nimport sprite from '../img/svg.svg';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { newFilterArray } from '../redux/operation';\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const [typeAuto, setTypeAuto] = useState('');\n  const [location, setLocation] = useState('');\n  const totalArrey = useSelector(state => state.totalCampers);\n  const [filteredData, setFilteredData] = useState([]);\n  const [filters, setFilters] = useState({\n    acChecked: false,\n    automaticChecked: false,\n    kitchenChecked: false,\n    tvChecked: false,\n    showerChecked: false,\n  });\n  const handleAcChange = checked => {\n    setFilters({ ...filters, acChecked: checked });\n  };\n\n  const handleAutomaticChange = checked => {\n    setFilters({ ...filters, automaticChecked: checked });\n  };\n  const handlekitchenChecked = checked => {\n    setFilters({ ...filters, kitchenChecked: checked });\n  };\n\n  const handletvChecked = checked => {\n    setFilters({ ...filters, tvChecked: checked });\n  };\n\n  const handleshowerChecked = checked => {\n    setFilters({ ...filters, showerChecked: checked });\n  };\n  const handleInputChangeLocation = e => {\n    setLocation(e.target.value);\n  };\n\n  const handleSearch = e => {\n    console.log(typeAuto);\n\n    e.preventDefault();\n    let Array1 = [];\n    let Array2 = [];\n    let Array3 = [];\n    let Array4 = [];\n    let Array5 = [];\n    let Array6 = [];\n\n    if (filters.acChecked) {\n      Array1 = totalArrey.filter(auto => auto.details.airConditioner > 0);\n    }\n    if (filters.automaticChecked) {\n      Array2 = totalArrey.filter(auto => auto.transmission === 'automatic');\n    }\n\n    if (filters.kitchenChecked) {\n      Array3 = totalArrey.filter(auto => auto.details.kitchen > 0);\n    }\n    if (filters.tvChecked) {\n      Array4 = totalArrey.filter(auto => auto.details.TV > 0);\n    }\n    if (filters.showerChecked) {\n      Array5 = totalArrey.filter(auto => auto.details.bathroom > 0);\n    }\n    if (location.length > 0) {\n      const regex = new RegExp(location, 'i');\n      Array6 = totalArrey.filter(auto => auto.location.match(regex));\n      console.log(Array6);\n    }\n\n    const commonElements = totalArrey?.filter(\n      item =>\n        (!Array1.length || Array1.some(element => element._id === item._id)) &&\n        (!Array2.length || Array2.some(element => element._id === item._id)) &&\n        (!Array3.length || Array3.some(element => element._id === item._id)) &&\n        (!Array4.length || Array4.some(element => element._id === item._id)) &&\n        (!Array5.length || Array5.some(element => element._id === item._id)) &&\n        (!Array6.length || Array6.some(element => element._id === item._id))\n    );\n    console.log(commonElements);\n    setFilteredData(commonElements);\n  };\n\n  useEffect(() => {\n    console.log(filteredData);\n    dispatch(newFilterArray(filteredData));\n  }, [dispatch, filteredData]);\n  return (\n    <>\n      <FormContainer>\n        <LocationDiv>\n          <label>Location</label>\n          <LocationInput\n            type=\"text\"\n            id=\"locationInput\"\n            placeholder=\"Kyiv, Ukraine\"\n            value={location}\n            onChange={handleInputChangeLocation}\n          ></LocationInput>\n        </LocationDiv>\n        <Filters>Filters</Filters>\n        <VehicleEquipment>Vehicle equipment</VehicleEquipment>\n        <Equipment>\n          <CheckboxLabel\n            htmlFor=\"AC\"\n            style={filters.acChecked ? { border: '1px solid red' } : {}}\n          >\n            <CheckboxInput\n              type=\"checkbox\"\n              id=\"AC\"\n              checked={filters.acChecked}\n              onChange={e => handleAcChange(e.target.checked)}\n            ></CheckboxInput>\n\n            <svg width=\"32\" height=\"32\">\n              <use xlinkHref={`${sprite}#blow`} width=\"32\" height=\"32\"></use>\n            </svg>\n\n            <p>AC</p>\n          </CheckboxLabel>\n          <CheckboxLabel\n            htmlFor=\"Automatic\"\n            style={filters.automaticChecked ? { border: '1px solid red' } : {}}\n          >\n            <CheckboxInput\n              type=\"checkbox\"\n              id=\"Automatic\"\n              checked={filters.automaticChecked}\n              onChange={e => handleAutomaticChange(e.target.checked)}\n            ></CheckboxInput>\n            <svg width=\"32\" height=\"32\">\n              <use href={`${sprite}#nets`}></use>\n            </svg>\n            <p>Automatic</p>\n          </CheckboxLabel>\n          <CheckboxLabel\n            htmlFor=\"Kitchen\"\n            style={filters.kitchenChecked ? { border: '1px solid red' } : {}}\n          >\n            <CheckboxInput\n              type=\"checkbox\"\n              id=\"Kitchen\"\n              checked={filters.kitchenChecked}\n              onChange={e => handlekitchenChecked(e.target.checked)}\n            ></CheckboxInput>\n            <svg width=\"32\" height=\"32\">\n              <use href={`${sprite}#Kitchen`}></use>\n            </svg>\n            <p>Kitchen</p>\n          </CheckboxLabel>\n          <CheckboxLabel\n            htmlFor=\"TV\"\n            style={filters.tvChecked ? { border: '1px solid red' } : {}}\n          >\n            <CheckboxInput\n              type=\"checkbox\"\n              id=\"TV\"\n              checked={filters.tvChecked}\n              onChange={e => handletvChecked(e.target.checked)}\n            ></CheckboxInput>\n            <svg width=\"32\" height=\"32\">\n              <use href={`${sprite}#tel`}></use>\n            </svg>\n            <p>TV</p>\n          </CheckboxLabel>\n          <CheckboxLabel\n            htmlFor=\"Shower/WC\"\n            style={filters.showerChecked ? { border: '1px solid red' } : {}}\n          >\n            <CheckboxInput\n              type=\"checkbox\"\n              id=\"Shower/WC\"\n              checked={filters.showerChecked}\n              onChange={e => handleshowerChecked(e.target.checked)}\n            ></CheckboxInput>\n            <svg width=\"32\" height=\"32\">\n              <use href={`${sprite}#dusch`}></use>\n            </svg>\n            <p>Shower/WC</p>\n          </CheckboxLabel>\n        </Equipment>\n        <Type>Vehicle type</Type>\n        <Equipment>\n          <CheckboxLabel\n            htmlFor=\"panelTruck\"\n            style={typeAuto === 'panelTruck' ? { border: '1px solid red' } : {}}\n          >\n            <CheckboxInput\n              type=\"radio\"\n              name=\"typeAuto\"\n              id=\"panelTruck\"\n              checked={typeAuto === 'panelTruck'}\n              onChange={() => setTypeAuto('panelTruck')}\n            ></CheckboxInput>\n            <svg width=\"32\" height=\"32\">\n              <use href={`${sprite}#auto`}></use>\n            </svg>\n            <p>Van</p>\n          </CheckboxLabel>\n          <CheckboxLabel\n            htmlFor=\"fullyIntegrated\"\n            style={\n              typeAuto === 'fullyIntegrated' ? { border: '1px solid red' } : {}\n            }\n          >\n            <CheckboxInput\n              type=\"radio\"\n              name=\"typeAuto\"\n              id=\"fullyIntegrated\"\n              checked={typeAuto === 'fullyIntegrated'}\n              onChange={() => setTypeAuto('fullyIntegrated')}\n            ></CheckboxInput>\n            <svg width=\"32\" height=\"32\">\n              <use href={`${sprite}#autodoor`}></use>\n            </svg>\n            <p>Fully Integrated</p>\n          </CheckboxLabel>\n          <CheckboxLabel\n            htmlFor=\"Alcove\"\n            style={typeAuto === 'Alcove' ? { border: '1px solid red' } : {}}\n          >\n            <CheckboxInput\n              type=\"radio\"\n              name=\"typeAuto\"\n              id=\"Alcove\"\n              checked={typeAuto === 'Alcove'}\n              onChange={() => setTypeAuto('Alcove')}\n            ></CheckboxInput>\n            <svg width=\"32\" height=\"32\">\n              <use href={`${sprite}#autofool`}></use>\n            </svg>\n            <p>Alcove</p>\n          </CheckboxLabel>\n        </Equipment>\n        <SearchButton type=\"submit\" onClick={handleSearch}>\n          Search\n        </SearchButton>\n      </FormContainer>\n    </>\n  );\n};\n\n// const Search = (e) => {\n//   e.preventDefault();\n//   let Array1 = [];\n//   let Array2 = [];\n//   let Array3 = [];\n//   let Array4 = [];\n//   let Array5 = [];\n\n//   if (acChecked) {\n//     Array1 = campersArrey.filter((auto) => auto.details.airConditioner > 0);\n//   }\n//   if (automaticChecked) {\n//     Array2 = campersArrey.filter((auto) => auto.transmission === 'automatic');\n//   }\n\n//   if (kitchenChecked) {\n//     Array3 = campersArrey.filter((auto) => auto.details.kitchen > 0);\n//   }\n//   if (tvChecked) {\n//     Array4 = campersArrey.filter((auto) => auto.details.TV > 0);\n//   }\n//   if (showerChecked) {\n//     Array5 = campersArrey.filter((auto) => auto.details.bathroom > 0);\n//   }\n//   console.log(Array3);\n//   let commonElements = Array1.filter(\n//     (item) =>\n//       Array2.some((element) => element._id === item._id) &&\n//       Array3.some((element) => element._id === item._id) &&\n//       Array4.some((element) => element._id === item._id) &&\n//       Array5.some((element) => element._id === item._id)\n//   );\n//   setFilterArray(commonElements);\n//   console.log(commonElements);\n// };\n\n// let Array1 = [];\n// let Array2 = [];\n// let Array3 = [];\n// let Array4 = [];\n// let Array5 = [];\n\n// if (filters.acChecked) {\n//   Array1 = campersArrey.filter((auto) => auto.details.airConditioner > 0);\n// }\n// if (filters.automaticChecked) {\n//   Array2 = campersArrey.filter((auto) => auto.transmission === 'automatic');\n// }\n\n// if (filters.kitchenChecked) {\n//   Array3 = campersArrey.filter((auto) => auto.details.kitchen > 0);\n// }\n// if (filters.tvChecked) {\n//   Array4 = campersArrey.filter((auto) => auto.details.TV > 0);\n// }\n// if (filters.showerChecked) {\n//   Array5 = campersArrey.filter((auto) => auto.details.bathroom > 0);\n// }\n\n// let commonElements = Array1?.filter(\n//   (item) =>\n//     (!Array2 ? [] : Array2.some((element) => element._id === item._id)) &&\n//     (!Array3 ? [] : Array3.some((element) => element._id === item._id)) &&\n//     (!Array4 ? [] : Array4.some((element) => element._id === item._id)) &&\n//     (!Array5 ? [] : Array5.some((element) => element._id === item._id))\n// );\n\n// if (filters.acChecked) {\n//   const acArray = campersArrey.filter(\n//     (auto) => auto.details.airConditioner > 0\n//   );\n//   filteredArray = filteredArray.concat(acArray);\n// }\n// if (filters.automaticChecked) {\n//   const acArray = campersArrey.filter(\n//     (auto) => auto.transmission === 'automatic'\n//   );\n//   filteredArray = filteredArray.concat(acArray);\n// }\n\n// if (filters.kitchenChecked) {\n//   const acArray = campersArrey.filter((auto) => auto.details.kitchen > 0);\n//   filteredArray = filteredArray.concat(acArray);\n// }\n// if (filters.tvChecked) {\n//   const acArray = campersArrey.filter((auto) => auto.details.TV > 0);\n//   filteredArray = filteredArray.concat(acArray);\n// }\n// if (filters.showerChecked) {\n//   const acArray = campersArrey.filter((auto) => auto.details.bathroom > 0);\n//   filteredArray = filteredArray.concat(acArray);\n// }\n\n// console.log(filteredArray);\n","import styled from 'styled-components';\nexport const MainContainer = styled.div`\n  display: flex;\n  gap: 64px;\n  justify-content: center;\n`;\nexport const FlexDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nexport const CampersButton = styled.button`\n  border: 1px solid rgba(71, 84, 103, 0.2);\n  border-radius: 200px;\n  padding: 16px 32px;\n  width: 145px;\n  height: 56px;\n`;\n","import { useEffect, useState } from 'react';\nimport { AutoCard } from '../AutoCard/AutoCard';\nimport { Filter } from '../Filter/Filter';\nimport { CampersButton, FlexDiv, MainContainer } from './CampersPage.styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { emptyArray, getCampers, totalCampers } from '../redux/operation';\n\nconst CampersPage = () => {\n  const dispatch = useDispatch();\n  const [page, setPage] = useState(1);\n  const [isArray, setIsArray] = useState(false);\n  const [buttonDisable, setbuttonDisable] = useState(false);\n  const totalArrey = useSelector(state => state.totalCampers);\n  const campersArrey = useSelector(state => state.campersArray);\n\n  const LoadMore = () => {\n    if (campersArrey.length + 4 >= totalArrey.length) {\n      setbuttonDisable(true);\n    }\n    setPage(prev => prev + 1);\n    dispatch(getCampers(page));\n  };\n\n  useEffect(() => {\n    if (!isArray) {\n      dispatch(emptyArray());\n      setIsArray(true);\n      return;\n    }\n    if (page > 1) {\n      return;\n    }\n\n    setPage(prev => prev + 1);\n    dispatch(getCampers(page));\n    dispatch(totalCampers());\n    return;\n  }, [dispatch, isArray, page]);\n\n  return (\n    <>\n      <MainContainer>\n        <Filter />\n        <FlexDiv>\n          <AutoCard page={page} />\n          {buttonDisable ? (\n            <CampersButton onClick={LoadMore} style={{ display: 'none' }}>\n              Load more\n            </CampersButton>\n          ) : (\n            <CampersButton onClick={LoadMore}>Load more</CampersButton>\n          )}\n        </FlexDiv>\n      </MainContainer>\n    </>\n  );\n};\nexport default CampersPage;\n"],"names":["AutoCard","_ref","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","isModalOpen","setIsModalOpen","_useState3","_useState4","selectedAuto","setSelectedAuto","_useState5","_useState6","favorites","setFavorites","campersArray","useSelector","state","newFilterArray","console","log","useEffect","storedFavorites","JSON","parse","localStorage","getItem","firstLetter","w","charAt","toUpperCase","slice","_jsxs","_Fragment","children","length","map","auto","_auto$gallery","_auto$reviews","_auto$details","id","CardContainer","_jsx","CardImgContainer","CardImg","src","gallery","alt","name","InformationContainer","NameDiv","Name","Prise","price","ButtonAddToFavorite","onClick","updatedFavorites","_toConsumableArray","index","indexOf","splice","removeFavoriteItem","push","addFavorite","setItem","stringify","addToFavirite","_id","includes","width","height","UseHart","href","concat","sprite","Reviews","ReviewsStar","rating","reviews","location","Description","description","UlList","List","ListText","adults","transmission","engine","fill","details","beds","ShowMore","showMore","ShowMoreCard","onClose","CheckboxInput","styled","_templateObject","_taggedTemplateLiteral","CheckboxLabel","_templateObject2","FormContainer","_templateObject3","Equipment","_templateObject4","LocationDiv","_templateObject5","LocationInput","_templateObject6","Filters","_templateObject7","VehicleEquipment","_templateObject8","Type","_templateObject9","SearchButton","_templateObject10","Filter","_templateObject11","typeAuto","setTypeAuto","setLocation","totalArrey","totalCampers","filteredData","setFilteredData","_useState7","acChecked","automaticChecked","kitchenChecked","tvChecked","showerChecked","_useState8","filters","setFilters","type","placeholder","value","onChange","e","target","htmlFor","style","border","checked","_objectSpread","xlinkHref","preventDefault","Array1","Array2","Array3","Array4","Array5","Array6","filter","airConditioner","kitchen","TV","bathroom","regex","RegExp","match","commonElements","item","some","element","MainContainer","FlexDiv","CampersButton","page","setPage","isArray","setIsArray","buttonDisable","setbuttonDisable","campersArrey","LoadMore","prev","getCampers","emptyArray","display"],"sourceRoot":""}