{"version":3,"file":"static/js/746.cc8b2fac.chunk.js","mappings":"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","sources":["AutoCard/AutoCard.jsx","Filter/Filter.styles.js","Filter/Filter.jsx","CampersPage/CampersPage.styles.js","CampersPage/CampersPage.jsx"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport {\n  ButtonAddToFavorite,\n  CardContainer,\n  CardImg,\n  CardImgContainer,\n  Description,\n  InformationContainer,\n  List,\n  ListText,\n  Name,\n  NameDiv,\n  Prise,\n  Reviews,\n  ReviewsStar,\n  ShowMore,\n  UlList,\n  UseHart,\n} from './AutoCard.styles';\nimport { addFavorite, removeFavoriteItem } from '../redux/operation';\nimport { useEffect, useState } from 'react';\nimport sprite from '../img/svg.svg';\nimport ShowMoreCard from '../ShowMoreCard/ShowMoreCard';\n\nexport const AutoCard = () => {\n  const dispatch = useDispatch();\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedAuto, setSelectedAuto] = useState(null);\n  const [favorites, setFavorites] = useState([]);\n  const campersArray = useSelector((state) => state.campersArray);\n  const newFilterArray = useSelector((state) => state.newFilterArray);\n\n  console.log(newFilterArray);\n  const showMore = (auto) => {\n    setSelectedAuto(auto);\n    setIsModalOpen(true);\n  };\n\n  useEffect(() => {\n    const storedFavorites = JSON.parse(localStorage.getItem('favorites')) || [];\n\n    setFavorites(storedFavorites);\n  }, []);\n\n  const addToFavirite = (id) => {\n    const updatedFavorites = [...favorites];\n    const index = updatedFavorites.indexOf(id);\n    if (index !== -1) {\n      updatedFavorites.splice(index, 1);\n      dispatch(removeFavoriteItem(id));\n    } else {\n      updatedFavorites.push(id);\n      dispatch(addFavorite(id));\n    }\n    setFavorites(updatedFavorites);\n    localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n  };\n\n  const firstLetter = (w) => {\n    if (w) {\n      return w.charAt(0).toUpperCase() + w.slice(1);\n    }\n  };\n  const onClose = () => {\n    return setIsModalOpen(false);\n  };\n  const isFavorite = (id) => favorites.includes(id);\n  return (\n    <>\n      {(newFilterArray.length > 0 ? newFilterArray : campersArray)?.map(\n        (auto) => (\n          <CardContainer key={auto._id}>\n            <CardImgContainer>\n              <CardImg src={auto.gallery?.[0]} alt={auto.name} />\n            </CardImgContainer>\n            <InformationContainer>\n              <NameDiv>\n                <Name>{auto.name}</Name>\n                <Prise>\n                  <p>€{auto.price},00</p>\n                  <ButtonAddToFavorite onClick={() => addToFavirite(auto._id)}>\n                    {isFavorite(auto._id) ? (\n                      <svg width=\"24\" height=\"24\">\n                        <UseHart href={`${sprite}#hearts`}></UseHart>\n                      </svg>\n                    ) : (\n                      <svg width=\"24\" height=\"24\">\n                        <UseHart href={`${sprite}#heart`}></UseHart>\n                      </svg>\n                    )}\n                  </ButtonAddToFavorite>\n                </Prise>\n              </NameDiv>\n              <Reviews>\n                <ReviewsStar>\n                  <svg width=\"20\" height=\"14\">\n                    <use href={`${sprite}#Rating`}></use>\n                  </svg>\n                  {auto.rating}({auto.reviews?.length} Reviews)\n                </ReviewsStar>\n                <p>\n                  <svg width=\"20\" height=\"14\">\n                    <use href={`${sprite}#map`}></use>\n                  </svg>\n                  {auto.location}\n                </p>\n              </Reviews>\n              <Description>{auto.description}</Description>\n              <UlList>\n                <List>\n                  <svg width=\"20\" height=\"20\">\n                    <use href={`${sprite}#Users`}></use>\n                  </svg>\n                  <ListText>{auto.adults} adults</ListText>\n                </List>\n                <List>\n                  <svg width=\"20\" height=\"20\">\n                    <use href={`${sprite}#nets`}></use>\n                  </svg>\n                  <ListText>{firstLetter(auto.transmission)}</ListText>\n                </List>\n                <List>\n                  <svg width=\"20\" height=\"20\">\n                    <use href={`${sprite}#tank`}></use>\n                  </svg>\n                  <ListText>{firstLetter(auto.engine)}</ListText>\n                </List>\n                <List>\n                  <svg width=\"20\" height=\"20\">\n                    <use href={`${sprite}#Kitchen`}></use>\n                  </svg>\n                  <p>Kitchen</p>\n                </List>\n                <List>\n                  <svg width=\"20\" height=\"20\">\n                    <use\n                      href={`${sprite}#bad`}\n                      width=\"20\"\n                      height=\"20\"\n                      fill=\"none\"\n                    ></use>\n                  </svg>\n                  <ListText>{auto.details?.beds} beds</ListText>\n                </List>\n                <List>\n                  <svg width=\"20\" height=\"20\">\n                    <use href={`${sprite}#blow`} width=\"20\" height=\"20\"></use>\n                  </svg>\n                  <ListText>AC</ListText>\n                </List>\n              </UlList>\n              <ShowMore onClick={() => showMore(auto)}>Show more</ShowMore>\n            </InformationContainer>\n          </CardContainer>\n        )\n      )}\n      {isModalOpen && <ShowMoreCard onClose={onClose} auto={selectedAuto} />}\n    </>\n  );\n};\n","import styled from 'styled-components';\nexport const CheckboxInput = styled.input`\n  position: absolute;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n`;\nexport const CheckboxLabel = styled.label`\n  cursor: pointer;\n  position: relative;\n  display: block;\n  border: 1px solid rgba(16, 24, 40, 0.2);\n  border-radius: 10px;\n  padding: 17px 12px;\n  width: 113px;\n  height: 95px;\n  text-align: center;\n\n  ${CheckboxInput}:checked + & {\n    background-color: green;\n    mix-blend-mode: multiply;\n  }\n`;\nexport const FormContainer = styled.form`\n  width: 360px;\n`;\nexport const Equipment = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  border-top: 1px solid rgba(16, 24, 40, 0.2);\n  padding-top: 24px;\n  margin-bottom: 32px;\n  color: #101828;\n`;\nexport const LocationDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\nexport const LocationInput = styled.input`\n  border-radius: 10px;\n  padding: 18px 218px 18px 18px;\n  width: 100%;\n  height: 56px;\n  background: #f7f7f7;\n\n  border: none;\n  margin-bottom: 32px;\n`;\nexport const Filters = styled.p`\n  margin-bottom: 14px;\n`;\nexport const VehicleEquipment = styled.p`\n  font-weight: 600;\n  font-size: 20px;\n  color: #101828;\n  margin-bottom: 24px;\n`;\nexport const Type = styled.p`\n  margin-bottom: 24px;\n`;\nexport const SearchButton = styled.button`\n  border-radius: 200px;\n  border: none;\n  padding: 16px 60px;\n  width: 173px;\n  height: 56px;\n  background: #e44848;\n  color: #fff;\n`;\nexport const Svg = styled.svg`\n  width: 15px;\n`;\n","import {\n  CheckboxInput,\n  CheckboxLabel,\n  Equipment,\n  Filters,\n  FormContainer,\n  LocationDiv,\n  LocationInput,\n  SearchButton,\n  Type,\n  VehicleEquipment,\n} from './Filter.styles';\n\nimport sprite from '../img/svg.svg';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { newFilterArray } from '../redux/operation';\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  // const [acChecked, setAcChecked] = useState(false);\n  // const [automaticChecked, setAutomaticChecked] = useState(false);\n  // const [kitchenChecked, setKitchen] = useState(false);\n  // const [tvChecked, setTv] = useState(false);\n  // const [showerChecked, setShower] = useState(false);\n  const [vanChecked, setVan] = useState(false);\n  const [fullyChecked, setFully] = useState(false);\n  const [alcoveChecked, setAlcove] = useState(false);\n\n  const totalArrey = useSelector(state => state.totalCampers);\n  const [filteredData, setFilteredData] = useState([]);\n\n  const [filters, setFilters] = useState({\n    acChecked: false,\n    automaticChecked: false,\n    kitchenChecked: false,\n    tvChecked: false,\n    showerChecked: false,\n  });\n  const handleAcChange = checked => {\n    setFilters({ ...filters, acChecked: checked });\n  };\n\n  const handleAutomaticChange = checked => {\n    setFilters({ ...filters, automaticChecked: checked });\n  };\n  const handlekitchenChecked = checked => {\n    setFilters({ ...filters, kitchenChecked: checked });\n  };\n\n  const handletvChecked = checked => {\n    setFilters({ ...filters, tvChecked: checked });\n  };\n\n  const handleshowerChecked = checked => {\n    setFilters({ ...filters, showerChecked: checked });\n  };\n\n  const handleSearch = e => {\n    e.preventDefault();\n    let Array1 = [];\n    let Array2 = [];\n    let Array3 = [];\n    let Array4 = [];\n    let Array5 = [];\n    console.log(Array1);\n    if (filters.acChecked) {\n      Array1 = totalArrey.filter(auto => auto.details.airConditioner > 0);\n      console.log(Array1);\n    }\n    if (filters.automaticChecked) {\n      Array2 = totalArrey.filter(auto => auto.transmission === 'automatic');\n      console.log(Array2);\n    }\n\n    if (filters.kitchenChecked) {\n      Array3 = totalArrey.filter(auto => auto.details.kitchen > 0);\n      console.log(Array3);\n    }\n    if (filters.tvChecked) {\n      Array4 = totalArrey.filter(auto => auto.details.TV > 0);\n      console.log(Array4);\n    }\n    if (filters.showerChecked) {\n      Array5 = totalArrey.filter(auto => auto.details.bathroom > 0);\n      console.log(Array5);\n    }\n\n    const commonElements = totalArrey?.filter(\n      item =>\n        (!Array1.length || Array1.some(element => element._id === item._id)) &&\n        (!Array2.length || Array2.some(element => element._id === item._id)) &&\n        (!Array3.length || Array3.some(element => element._id === item._id)) &&\n        (!Array4.length || Array4.some(element => element._id === item._id)) &&\n        (!Array5.length || Array5.some(element => element._id === item._id))\n    );\n    console.log(commonElements);\n    setFilteredData(commonElements);\n  };\n\n  useEffect(() => {\n    console.log(filteredData);\n    dispatch(newFilterArray(filteredData));\n  }, [dispatch, filteredData]);\n  return (\n    <>\n      <FormContainer>\n        <LocationDiv>\n          <label>Location</label>\n          <LocationInput placeholder=\"Kyiv, Ukraine\"></LocationInput>\n        </LocationDiv>\n        <Filters>Filters</Filters>\n        <VehicleEquipment>Vehicle equipment</VehicleEquipment>\n        <Equipment>\n          <CheckboxLabel\n            htmlFor=\"AC\"\n            style={filters.acChecked ? { border: '1px solid red' } : {}}\n          >\n            <CheckboxInput\n              type=\"checkbox\"\n              id=\"AC\"\n              checked={filters.acChecked}\n              onChange={e => handleAcChange(e.target.checked)}\n            ></CheckboxInput>\n\n            <svg width=\"32\" height=\"32\">\n              <use xlinkHref={`${sprite}#blow`} width=\"32\" height=\"32\"></use>\n            </svg>\n\n            <p>AC</p>\n          </CheckboxLabel>\n          <CheckboxLabel\n            htmlFor=\"Automatic\"\n            style={filters.automaticChecked ? { border: '1px solid red' } : {}}\n          >\n            <CheckboxInput\n              type=\"checkbox\"\n              id=\"Automatic\"\n              checked={filters.automaticChecked}\n              onChange={e => handleAutomaticChange(e.target.checked)}\n            ></CheckboxInput>\n            <svg width=\"32\" height=\"32\">\n              <use href={`${sprite}#nets`}></use>\n            </svg>\n            <p>Automatic</p>\n          </CheckboxLabel>\n          <CheckboxLabel\n            htmlFor=\"Kitchen\"\n            style={filters.kitchenChecked ? { border: '1px solid red' } : {}}\n          >\n            <CheckboxInput\n              type=\"checkbox\"\n              id=\"Kitchen\"\n              checked={filters.kitchenChecked}\n              onChange={e => handlekitchenChecked(e.target.checked)}\n            ></CheckboxInput>\n            <svg width=\"32\" height=\"32\">\n              <use href={`${sprite}#Kitchen`}></use>\n            </svg>\n            <p>Kitchen</p>\n          </CheckboxLabel>\n          <CheckboxLabel\n            htmlFor=\"TV\"\n            style={filters.tvChecked ? { border: '1px solid red' } : {}}\n          >\n            <CheckboxInput\n              type=\"checkbox\"\n              id=\"TV\"\n              checked={filters.tvChecked}\n              onChange={e => handletvChecked(e.target.checked)}\n            ></CheckboxInput>\n            <svg width=\"32\" height=\"32\">\n              <use href={`${sprite}#tel`}></use>\n            </svg>\n            <p>TV</p>\n          </CheckboxLabel>\n          <CheckboxLabel\n            htmlFor=\"Shower/WC\"\n            style={filters.showerChecked ? { border: '1px solid red' } : {}}\n          >\n            <CheckboxInput\n              type=\"checkbox\"\n              id=\"Shower/WC\"\n              checked={filters.showerChecked}\n              onChange={e => handleshowerChecked(e.target.checked)}\n            ></CheckboxInput>\n            <svg width=\"32\" height=\"32\">\n              <use href={`${sprite}#dusch`}></use>\n            </svg>\n            <p>Shower/WC</p>\n          </CheckboxLabel>\n        </Equipment>\n        <Type>Vehicle type</Type>\n        <Equipment>\n          <CheckboxLabel\n            htmlFor=\"Van\"\n            style={vanChecked ? { border: '1px solid red' } : {}}\n          >\n            <CheckboxInput\n              type=\"checkbox\"\n              id=\"Van\"\n              checked={vanChecked}\n              onChange={e => setVan(e.target.checked)}\n            ></CheckboxInput>\n            <svg width=\"32\" height=\"32\">\n              <use href={`${sprite}#auto`}></use>\n            </svg>\n            <p>Van</p>\n          </CheckboxLabel>\n          <CheckboxLabel\n            htmlFor=\"Fully-Integrated\"\n            style={fullyChecked ? { border: '1px solid red' } : {}}\n          >\n            <CheckboxInput\n              type=\"checkbox\"\n              id=\"Fully-Integrated\"\n              checked={fullyChecked}\n              onChange={e => setFully(e.target.checked)}\n            ></CheckboxInput>\n            <svg width=\"32\" height=\"32\">\n              <use href={`${sprite}#autodoor`}></use>\n            </svg>\n            <p>Fully Integrated</p>\n          </CheckboxLabel>\n          <CheckboxLabel\n            htmlFor=\"Alcove\"\n            style={alcoveChecked ? { border: '1px solid red' } : {}}\n          >\n            <CheckboxInput\n              type=\"checkbox\"\n              id=\"Alcove\"\n              checked={alcoveChecked}\n              onChange={e => setAlcove(e.target.checked)}\n            ></CheckboxInput>\n            <svg width=\"32\" height=\"32\">\n              <use href={`${sprite}#autofool`}></use>\n            </svg>\n            <p>Alcove</p>\n          </CheckboxLabel>\n        </Equipment>\n        <SearchButton type=\"submit\" onClick={handleSearch}>\n          Search\n        </SearchButton>\n      </FormContainer>\n    </>\n  );\n};\n\n// const Search = (e) => {\n//   e.preventDefault();\n//   let Array1 = [];\n//   let Array2 = [];\n//   let Array3 = [];\n//   let Array4 = [];\n//   let Array5 = [];\n\n//   if (acChecked) {\n//     Array1 = campersArrey.filter((auto) => auto.details.airConditioner > 0);\n//   }\n//   if (automaticChecked) {\n//     Array2 = campersArrey.filter((auto) => auto.transmission === 'automatic');\n//   }\n\n//   if (kitchenChecked) {\n//     Array3 = campersArrey.filter((auto) => auto.details.kitchen > 0);\n//   }\n//   if (tvChecked) {\n//     Array4 = campersArrey.filter((auto) => auto.details.TV > 0);\n//   }\n//   if (showerChecked) {\n//     Array5 = campersArrey.filter((auto) => auto.details.bathroom > 0);\n//   }\n//   console.log(Array3);\n//   let commonElements = Array1.filter(\n//     (item) =>\n//       Array2.some((element) => element._id === item._id) &&\n//       Array3.some((element) => element._id === item._id) &&\n//       Array4.some((element) => element._id === item._id) &&\n//       Array5.some((element) => element._id === item._id)\n//   );\n//   setFilterArray(commonElements);\n//   console.log(commonElements);\n// };\n\n// let Array1 = [];\n// let Array2 = [];\n// let Array3 = [];\n// let Array4 = [];\n// let Array5 = [];\n\n// if (filters.acChecked) {\n//   Array1 = campersArrey.filter((auto) => auto.details.airConditioner > 0);\n// }\n// if (filters.automaticChecked) {\n//   Array2 = campersArrey.filter((auto) => auto.transmission === 'automatic');\n// }\n\n// if (filters.kitchenChecked) {\n//   Array3 = campersArrey.filter((auto) => auto.details.kitchen > 0);\n// }\n// if (filters.tvChecked) {\n//   Array4 = campersArrey.filter((auto) => auto.details.TV > 0);\n// }\n// if (filters.showerChecked) {\n//   Array5 = campersArrey.filter((auto) => auto.details.bathroom > 0);\n// }\n\n// let commonElements = Array1?.filter(\n//   (item) =>\n//     (!Array2 ? [] : Array2.some((element) => element._id === item._id)) &&\n//     (!Array3 ? [] : Array3.some((element) => element._id === item._id)) &&\n//     (!Array4 ? [] : Array4.some((element) => element._id === item._id)) &&\n//     (!Array5 ? [] : Array5.some((element) => element._id === item._id))\n// );\n\n// if (filters.acChecked) {\n//   const acArray = campersArrey.filter(\n//     (auto) => auto.details.airConditioner > 0\n//   );\n//   filteredArray = filteredArray.concat(acArray);\n// }\n// if (filters.automaticChecked) {\n//   const acArray = campersArrey.filter(\n//     (auto) => auto.transmission === 'automatic'\n//   );\n//   filteredArray = filteredArray.concat(acArray);\n// }\n\n// if (filters.kitchenChecked) {\n//   const acArray = campersArrey.filter((auto) => auto.details.kitchen > 0);\n//   filteredArray = filteredArray.concat(acArray);\n// }\n// if (filters.tvChecked) {\n//   const acArray = campersArrey.filter((auto) => auto.details.TV > 0);\n//   filteredArray = filteredArray.concat(acArray);\n// }\n// if (filters.showerChecked) {\n//   const acArray = campersArrey.filter((auto) => auto.details.bathroom > 0);\n//   filteredArray = filteredArray.concat(acArray);\n// }\n\n// console.log(filteredArray);\n","import styled from 'styled-components';\nexport const MainContainer = styled.div`\n  display: flex;\n  gap: 64px;\n  justify-content: center;\n`;\nexport const FlexDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nexport const CampersButton = styled.button`\n  border: 1px solid rgba(71, 84, 103, 0.2);\n  border-radius: 200px;\n  padding: 16px 32px;\n  width: 145px;\n  height: 56px;\n`;\n","import { useEffect, useState } from 'react';\nimport { AutoCard } from '../AutoCard/AutoCard';\nimport { Filter } from '../Filter/Filter';\nimport { CampersButton, FlexDiv, MainContainer } from './CampersPage.styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { emptyArray, getCampers, totalCampers } from '../redux/operation';\n\nconst CampersPage = () => {\n  const dispatch = useDispatch();\n  const [page, setPage] = useState(1);\n  const [isArray, setIsArray] = useState(false);\n  const [buttonDisable, setbuttonDisable] = useState(false);\n  const totalArrey = useSelector(state => state.totalCampers);\n  const campersArrey = useSelector(state => state.campersArray);\n\n  const LoadMore = () => {\n    if (campersArrey.length + 4 >= totalArrey.length) {\n      setbuttonDisable(true);\n    }\n    setPage(prev => prev + 1);\n    dispatch(getCampers(page));\n  };\n\n  useEffect(() => {\n    if (!isArray) {\n      dispatch(emptyArray());\n      setIsArray(true);\n      return;\n    }\n    if (page > 1) {\n      return;\n    }\n\n    setPage(prev => prev + 1);\n    dispatch(getCampers(page));\n    dispatch(totalCampers());\n    return;\n  }, [dispatch, isArray, page]);\n\n  return (\n    <>\n      <MainContainer>\n        <Filter />\n        <FlexDiv>\n          <AutoCard page={page} />\n          {buttonDisable ? (\n            <CampersButton onClick={LoadMore} style={{ display: 'none' }}>\n              Load more\n            </CampersButton>\n          ) : (\n            <CampersButton onClick={LoadMore}>Load more</CampersButton>\n          )}\n        </FlexDiv>\n      </MainContainer>\n    </>\n  );\n};\nexport default CampersPage;\n"],"names":["AutoCard","_ref","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","isModalOpen","setIsModalOpen","_useState3","_useState4","selectedAuto","setSelectedAuto","_useState5","_useState6","favorites","setFavorites","campersArray","useSelector","state","newFilterArray","console","log","useEffect","storedFavorites","JSON","parse","localStorage","getItem","firstLetter","w","charAt","toUpperCase","slice","_jsxs","_Fragment","children","length","map","auto","_auto$gallery","_auto$reviews","_auto$details","id","CardContainer","_jsx","CardImgContainer","CardImg","src","gallery","alt","name","InformationContainer","NameDiv","Name","Prise","price","ButtonAddToFavorite","onClick","updatedFavorites","_toConsumableArray","index","indexOf","splice","removeFavoriteItem","push","addFavorite","setItem","stringify","addToFavirite","_id","includes","width","height","UseHart","href","concat","sprite","Reviews","ReviewsStar","rating","reviews","location","Description","description","UlList","List","ListText","adults","transmission","engine","fill","details","beds","ShowMore","showMore","ShowMoreCard","onClose","CheckboxInput","styled","_templateObject","_taggedTemplateLiteral","CheckboxLabel","_templateObject2","FormContainer","_templateObject3","Equipment","_templateObject4","LocationDiv","_templateObject5","LocationInput","_templateObject6","Filters","_templateObject7","VehicleEquipment","_templateObject8","Type","_templateObject9","SearchButton","_templateObject10","Filter","_templateObject11","vanChecked","setVan","fullyChecked","setFully","alcoveChecked","setAlcove","totalArrey","totalCampers","_useState7","_useState8","filteredData","setFilteredData","_useState9","acChecked","automaticChecked","kitchenChecked","tvChecked","showerChecked","_useState10","filters","setFilters","placeholder","htmlFor","style","border","type","checked","onChange","e","target","_objectSpread","xlinkHref","preventDefault","Array1","Array2","Array3","Array4","Array5","filter","airConditioner","kitchen","TV","bathroom","commonElements","item","some","element","MainContainer","FlexDiv","CampersButton","page","setPage","isArray","setIsArray","buttonDisable","setbuttonDisable","campersArrey","LoadMore","prev","getCampers","emptyArray","display"],"sourceRoot":""}